text = "ERROR"
)
tinytex::parse_install(
text = "! LaTeX Error: File `grfext.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `biblatex.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `csquotes.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `doi.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `filecontents.sty' not found."
)
tlmgr install babel-english
bookdown:::mathquill()
tinytex::parse_install(
text = "! LaTeX Error: File `latexbangla.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `ucharclasses.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `chngcntr.sty' not found.
"
)
library(rvest)
library(tabulizer)
src <- "https://www.espncricinfo.com/records/fastest-hundreds-211608"
fastest_odi_ton <- html_table(read_html(src), header = TRUE)[[1]]
fastest_odi_ton
tnd <- "https://www.timeanddate.com/sun/bangladesh/dhaka?month=1&year=2024"
tdh <- html_table(read_html(tnd), header = TRUE)[[1]]
head(tdh)
tdh <- html_table(read_html(tnd), header = TRUE)[[2]]
head(tdh)
x=seq(0,1, length.out = 10)
sum(x^2)
sum(x^24)
sum(x^4)
tinytex::parse_install(
text = "! LaTeX Error: File `beamerthemeHUST.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `cancel.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `textpos' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `textpos.sty' not found.
"
)
tinytex::parse_install(
text = "! LaTeX Error: File `movie15.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `animate.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `pdfbase.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `ocgbase.sty' not found."
)
tinytex::parse_install(
text = "ERROR"
)
tinytex::parse_install(
text = "tinytex::parse_install(
text = "ERROR"
tinytex::parse_install(
text = "! LaTeX Error: File `imakeidx.sty' not found."
)
tinytex::parse_install(
text = "tinytex::parse_install(
text = "! LaTeX Error: File `enumitem.sty' not found."
tinytex::parse_install(
text = "tinytex::parse_install(
text = " LaTeX Error: File `enumitem.sty' not found."
tinytex::parse_install(
text = "ERROR"
)
tinytex::parse_install(
text = "! LaTeX Error: File `enumitem.sty' not found."
)
tinytex::parse_install(
text = "whileloop.sty not found"
)
tinytex::parse_install(
text = "! LaTeX Error: File `whileloop.sty' not found.
"
)
tinytex::parse_install(
text = "! LaTeX Error: File `whileloop.sty' not found.
"
)
library(clockplot)
?bdquake
bdquake
clock_chart_qnt(bdquake, time = hms)
?clock_chart_qnt
clock_chart_qnt(bdquake, time = hms, len = depth)
bdq <- bdquake
bdq$Day <- sample(nrow(bdq))
bdq
clock_chart_qnt(bdquake, time = hms, len = depth)
library(tidyverse)
clock_chart_qnt(bdquake, time = hms, len = depth) + facet_wrap(~day())
clock_chart_qnt(bdquake, time = hms, len = depth) + facet_wrap(~Day)
clock_chart_qnt(bdq, time = hms, len = depth) + facet_wrap(~Day)
bdq$Day <- sample(1:4)
bdq$Day <- c(sample(1:4), 2)
bdq$Day <- c(sample(1:4, 13, replace = TRUE))
clock_chart_qnt(bdq, time = hms, len = depth) + facet_wrap(~Day)
clock_chart_qnt(bdq, time = hms, len = depth) + facet_wrap(~Day, ncol = 1)
clock_chart_qnt(bdq, time = hms, len = depth) + facet_wrap(~Day, nrow = 4)
clock_chart_qnt(bdq, time = hms, len = depth, Col = Mag)
clock_chart_qnt(bdq, time = hms, len = depth, Col = mag)
install.packages("cranlogs")
library(cranlogs)
cran_downloads(packages = "clockplot", when = "last-week")
?cranlogs
cran_downloads(packages = "clockplot", when = "last-day")
cran_downloads(packages = "clockplot", when = "last-week")
cite("clockplot")
citation("clockplot")
cran_downloads(packages = "clockplot", when = "last-week")
library(tidyverse)
library(clockplot)
clock_chart_qnt(brintcity %>% filter (Origin %in% c("Dhaka", "Chittagong")), time = Departure, len = Train_no, high = "red", low = "green")+facet_wrap(~Origin)
clock_chart_qnt(brintcity %>% filter (Origin %in% c("Dhaka", "Chittagong")), time = Departure, len = Train_no, Col = Origin, high = "red", low = "green")
clock_chart_qnt(brintcity %>% filter (Origin %in% c("Dhaka", "Chittagong")), time = Departure, len = Train_no, Col = Origin, high = "red", low = "green")+
ggplot2::labs(
color = "Origin", size = "Magnitude",
title = "Earthquakes in Bangladesh since 2023"
)
clock_chart_col(brintcity, time = Departure, crit = Off_day)
View(brintcity)
rlang::last_trace()
clock_chart_col(brintcity, time = Departure, crit = Type)
brintcity
str(brintcity)
clock_chart_col(brintcity, time = Departure, crit = as.factor(Type))
rlang::last_trace()
clock_chart_col(brintcity, time = Departure, crit = Train_no)
?clock_chart_qlt
clock_chart_qlt(brintcity, time = Departure, crit = Type)
clock_chart_qlt(brintcity, time = Departure, crit = Off_day)
clock_chart_qlt(brintcity, time = Departure, crit = Zone)
clock_chart_qlt(brintcity, time = Departure, crit = Zone)+
ggplot2::labs(
color = "Origin", size = "Magnitude",
title = "Earthquakes in Bangladesh since 2023"
)
clock_chart_qlt(brintcity, time = Departure, crit = Zone)+
ggplot2::labs(
color = "Zone",
title = "Departure Times of Trains from Dhaka"
)
clock_chart_qlt(brintcity, time = Arrival, crit = Zone)+
ggplot2::labs(
color = "Zone",
title = "Departure Times of Trains from Dhaka"
)
clock_chart_qlt(brintcity, time = Arrival, crit = Zone)+
ggplot2::labs(
color = "Zone",
title = "Arrival Times of Trains from Dhaka"
)
bdquake
bdquake %>% ggplot(aes(hms, mag))+
geom_bar(stat = "idnetity")
bdquake %>% ggplot(aes(hms, mag))+
geom_bar(stat = "identity")
bdquake %>% ggplot(aes(hms, mag))+
geom_bar(stat = "identity")+
labs(x = "Time", y = "Magnitude")
bdquake
bdquake %>% ggplot(aes(hms, mag, fill = mag))+
geom_bar(stat = "identity")+
labs(x = "Time",
y = "Magnitude",
title = "Recent Earthquakes in Bngladesh")
bdquake %>% ggplot(aes(hms, mag))+
geom_bar(stat = "identity")+
labs(x = "Time",
y = "Magnitude",
title = "Recent Earthquakes in Bngladesh")
gitcommit
acdt <- read.csv("https://raw.githubusercontent.com/mahmudstat/open-analysis/main/data/usacc.csv")
acdt %>% ggplot(aes(Time, Humidity...))+
geom_bar(stat = "identity")
acdt %>% ggplot(aes(Time, Humidity...))+
geom_bar(stat = "identity")+
labs(x = "Time",
y = "Humidity",
title = "USA Accidents Time and Corresponding Humidity")
clock_chart_qlt(brintcity, time = Arrival, crit = Zone)+
ggplot2::labs(
color = "Zone",
title = "Times of Arrival of Trains in Dhaka Station"
)
clock_chart_qlt(brintcity, time = Departure, crit = Zone)+
ggplot2::labs(
color = "Zone",
title = "Times of Arrival of Trains in Dhaka Station"
)
clock_chart_qlt(brintcity, time = Departure, crit = Zone)+
ggplot2::labs(
color = "Zone",
title = "Times of Departure of Trains from Dhaka Station"
)
?pivot_longer
brintcity %>% pivot_longer(cols = c("Arrival", "Departure"),
names_to = Time,
values_to = "Mode")
brintcity %>% pivot_longer(cols = c("Arrival", "Departure"),
names_to = "Time",
values_to = "Mode")
brintcity %>% pivot_longer(cols = c("Arrival", "Departure"),
names_to = "Mode",
values_to = "Time")
brintcity %>% pivot_longer(cols = c("Arrival", "Departure"),
names_to = "Mode",
values_to = "Time") %>%
clock_chart_qlt(time = Time, crit = Mode)
# Merge Arrival and Departure
brintcity %>% pivot_longer(cols = c("Arrival", "Departure"),
names_to = "TYPE",
values_to = "Time") %>%
clock_chart_qlt(time = Time, crit = TYPE)
# Merge Arrival and Departure
brintcity %>% pivot_longer(cols = c("Arrival", "Departure"),
names_to = "TYPE",
values_to = "Time") %>%
clock_chart_qlt(time = Time, crit = TYPE)+
labs(title = "Times of Departure & Arrival of Trains from Dhaka Station")
# Merge Arrival and Departure
brintcity %>% pivot_longer(cols = c("Arrival", "Departure"),
names_to = "TYPE",
values_to = "Time") %>%
clock_chart_qlt(time = Time, crit = TYPE)+
labs(title = "Departure & Arrival Times of Trains from Dhaka Station")
acdt <- read.csv("https://raw.githubusercontent.com/mahmudstat/open-analysis/main/data/usacc.csv")
clock_chart_qnt(acdt,
time = Time,
len = Humidity...,
Col = Temperature.F.) +
ggplot2::labs(size = "Humidity",
color = "Temperature")
clock_chart_qnt(acdt,
time = Time,
len = Humidity...,
Col = Temperature.F.) +
ggplot2::labs(size = "Humidity",
color = "Temperature",
title = "Times of Accidents in USA")
clock_chart_qnt(acdt,
time = Time,
len = Humidity...,
Col = Temperature.F.) +
ggplot2::labs(size = "Humidity",
color = "Temperature",
title = "Times of Accidents in USA")+
theme(legend.position = "right")
clock_chart_qnt(brintcity %>% filter (Origin %in% c("Dhaka", "Chittagong")), time = Departure, len = Train_no, Col = Origin, high = "red", low = "green")+
ggplot2::labs(
color = "Origin", size = "Magnitude",
title = "Earthquakes in Bangladesh since 2023"
)
clock_chart_qnt(brintcity %>% filter (Origin %in% c("Dhaka", "Chittagong")), time = Departure, len = Train_no, Col = Origin, high = "red", low = "green")+
ggplot2::labs(
color = "Origin", size = "Magnitude",
title = "Earthquakes in Bangladesh since 2023"
)+
theme(legend.position = "right")
bdquake %>% ggplot(aes(hms, mag))+
geom_bar(stat = "identity")+
labs(x = "Time",
y = "Magnitude",
title = "Recent Earthquakes in Bngladesh")
?clock_chart_qnt
p1 + ggplot2::labs(
color = "Depth", size = "Magnitude",
title = "Earthquakes in Bangladesh since 2023"
)
p1 <- clock_chart_qnt(
data = bdquake, time = hms, len = depth,
Col = mag, high = "red", low = "blue"
)
p1 + ggplot2::labs(
color = "Depth", size = "Magnitude",
title = "Earthquakes in Bangladesh since 2023"
)
clock_chart_qnt(
data = bdquake, time = hms, len = depth,
Col = mag, high = "red", low = "blue"
) + ggplot2::labs(
color = "Depth", size = "Magnitude",
title = "Earthquakes in Bangladesh since 2023"
)+
theme(legend.position = "right")
k <- 24
hour <- exp(1i * 2 * pi * (k:1) / k)
plot(hour, pch = 19)
# prepare "circle data"
radius = 1
center_x = 0
center_y = 0
theta = seq(0, 2 * pi, length = 200) # angles for drawing points around the circle
# draw the circle
lines(x = radius * cos(theta) + center_x, y = radius * sin(theta) + center_y)
plot(hour, pch = 19, asp = 1)
plot(exp(1i * 2 * pi * (24:1) / k))
plot(exp(1i * 2 * pi * (24:1) / k), pch = 19, asp = 1)
plot(exp(1i * 2 * pi * (24:1) / k), pch = 19, asp = 1,
xaxt='n', yaxt='n', type = "n")
plot(exp(1i * 2 * pi * (24:1) / k), pch = 19, asp = 1)
plot(exp(1i * 2 * pi * (24:1) / k), pch = 19, asp = 1, xaxt='n')
plot(exp(1i * 2 * pi * (24:1) / k), pch = 19, asp = 1, xaxt='n', yaxt = 'n')
?plot
plot(exp(1i * 2 * pi * (24:1) / k),
pch = 19, asp = 1, xaxt='n', yaxt = 'n',
xlab = "")
plot(exp(1i * 2 * pi * (24:1) / k),
pch = 19, asp = 1, xaxt='n', yaxt = 'n',
xlab = "", ylab = NULL)
plot(exp(1i * 2 * pi * (24:1) / k),
pch = 19, asp = 1, xaxt='n', yaxt = 'n',
xlab = "", ylab = NULL)
plot(exp(1i * 2 * pi * (24:1) / k),
pch = 19, asp = 1, xaxt='n', yaxt = 'n',
xlab = "", ylab = "")
k <- 24
times <- exp(1i * 2 * pi * (k:1) / k)
plot(times, xaxt='n', yaxt='n', type = "n")
# ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
# text(times, labels = paste0(c(6:23, 0:5), ampm))
text(times, labels = c(6:23, 0:5))
plot(times, xaxt='n', yaxt='n', type = "n", asp = 1)
# ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
# text(times, labels = paste0(c(6:23, 0:5), ampm))
text(times, labels = c(6:23, 0:5))
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
text(times, labels = paste0(c(6:23, 0:5), ampm))
plot(times, xaxt='n', yaxt='n', type = "n", asp = 1)
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
text(times, labels = paste0(c(6:23, 0:5), ampm))
basic_clock <- function(){
k <- 24 # Hours
subk <- 24*4
times <- exp(1i * 2 * pi * (k:1) / k)
subtimes <- data.frame(SubT = exp(1i * 2 * pi * (subk:1) / subk))
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
dfclock <- tibble(time = times,
hour = c(6:12, 1:12, 1:5), # May not be needed
label = paste0(c(6:12, 1:5), ampm))
clock_skeleton <-  dfclock %>% ggplot()+
geom_path(data = subtimes, aes(Re(SubT), Im(SubT)))+
# Connect Last two missing points
geom_line(data = subtimes %>% dplyr::slice(-c(2:95)), aes(Re(SubT), Im(SubT)))+
theme(aspect.ratio = 1)+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(data = subtimes,
aes(Re(SubT), Im(SubT)), shape = 19, color = "black", size = 0.6)+
geom_point(aes(Re(time), Im(time)), color = "black", size = 1.8)+
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none",
aspect.ratio = 1)#+
#geom_point(aes(0,0), color = "black", size = 2)
return(clock_skeleton)
}
clock <- basic_clock() # Working
clock
k <- 24
hour <- exp(1i * 2 * pi * (k:1) / k)
plot(hour, pch = 19, asp = 1)
k <- 24
times <- exp(1i * 2 * pi * (k:1) / k)
plot(times, xaxt='n', yaxt='n', type = "n", asp = 1)
# ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
# text(times, labels = paste0(c(6:23, 0:5), ampm))
text(times, labels = c(6:23, 0:5))
plot(hour, pch = 19, asp = 1, xaxt='n', yaxt='n')
# Create a perfect circle
theta <- seq(0, 2*pi, length.out = 100)  # 100 points from 0 to 2π
circle <- exp(1i * theta)
plot(Re(circle), Im(circle), type = "l", asp = 1, col = "blue", lwd = 2,
xlab = "Real axis", ylab = "Imaginary axis", main = "Perfect Circle")
grid()
# Create a perfect circle
theta <- seq(0, 2*pi, length.out = 100)  # 100 points from 0 to 2π
circle <- exp(1i * theta)
plot(Re(circle), Im(circle), type = "l", asp = 1, col = "blue", lwd = 2,
xlab = "Real axis", ylab = "Imaginary axis", main = "Perfect Circle")
# Rose curve: r = cos(k * theta)
t <- seq(0, 2*pi, length.out = 500)
k <- 5  # Number of petals
z <- cos(k * t) * exp(1i * t)  # Rose curve formula
plot(Re(z), Im(z), type = "l", asp = 1, col = "purple", lwd = 2,
main = paste("Rose Curve with", k, "petals"),
xlab = "Real", ylab = "Imaginary")
# Archimedean spiral
t <- seq(0, 8*pi, length.out = 500)  # Multiple rotations
z <- (t/5) * exp(1i * t)  # Radius increases with angle
plot(Re(z), Im(z), type = "l", asp = 1, col = "darkorange", lwd = 2,
main = "Archimedean Spiral", xlab = "Real", ylab = "Imaginary")
k <- 24
hour <- exp(1i * 2 * pi * (k:1) / k)
plot(hour, pch = 19, asp = 1, xaxt='n', yaxt='n')
plot(hour, pch = 19, asp = 1, xaxt='n', yaxt='n', xlab = "", ylab = "")
k <- 24
hour <- exp(1i * 2 * pi * (k:1) / k)
plot(hour,
pch = 19,        # Solid points
asp = 1,         # Perfect circle aspect ratio
xaxt = 'n',      # Remove x-axis
yaxt = 'n',      # Remove y-axis
xlab = "",       # Remove x-label
ylab = "",       # Remove y-label
bty = "n",       # Remove box around plot
col = "black",   # Point color
cex = 1.5)       # Point size
basic_clock <- function(){
k <- 24 # Hours
subk <- 24*4
times <- exp(1i * 2 * pi * (k:1) / k)
subtimes <- data.frame(SubT = exp(1i * 2 * pi * (subk:1) / subk))
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
dfclock <- tibble(time = times,
hour = c(6:12, 1:12, 1:5), # May not be needed
label = paste0(c(6:12, 1:5), ampm))
clock_skeleton <-  dfclock %>% ggplot()+
geom_path(data = subtimes, aes(Re(SubT), Im(SubT)))+
# Connect Last two missing points
geom_line(data = subtimes %>% dplyr::slice(-c(2:95)), aes(Re(SubT), Im(SubT)))+
theme(aspect.ratio = 1)+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(data = subtimes,
aes(Re(SubT), Im(SubT)), shape = 19, color = "black", size = 0.6)+
geom_point(aes(Re(time), Im(time)), color = "black", size = 1.8)+
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none",
aspect.ratio = 1)#+
#geom_point(aes(0,0), color = "black", size = 2)
return(clock_skeleton)
}
clock <- basic_clock() # Working
clock
cranlogs::cran_downloads(packages = "clockplot", when = "last-week")
cranlogs::cran_downloads(packages = "clockplot", when = "last-week")$count |> sum()
cranlogs::cran_downloads(packages = "clockplot", when = "last-month")$count |> sum()
1:3 |> sd()
1:3 |> sum()
cranlogs::cran_downloads(packages = "clockplot", when = "last-month")$count |> sum()
cranlogs::cran_downloads(packages = "clockplot", when = "last-month")$count |> sum()
cranlogs::cran_downloads(packages = "clockplot", when = "last-month")$count |> sum()
cranlogs::cran_downloads(packages = "clockplot", when = "last-month")$count |> sum()
cranlogs::cran_downloads(packages = "clockplot", when = "last-month")$count |> sum()
tinytex::parse_install(
text = "ERROR"
)
tinytex::parse_install(
text = "! LaTeX Error: File `fancyhdr.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `tgschola.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `lastpage.sty' not found."
)
cranlogs::cran_downloads(packages = "clockplot", when = "last-month")$count |> sum()
cranlogs::cran_downloads(packages = "clockplot", when = "last-month")$count
cranlogs::cran_downloads(packages = "clockplot", when = "last-month")
cranlogs::cran_downloads(packages = "clockplot", when = "last-month")$count |> plot()
cranlogs::cran_downloads(packages = "clockplot", when = "last-month")$count |> plot(type = "b")
cranlogs::cran_downloads(packages = "clockplot", when = "last-week")$count |> plot(type = "b")
?clcokplot
??clcokplot
par(pty="s")
k <- 100
timepoint <- exp(1i * 2 * pi * (k:1) / k)
plot(timepoint, pch = 19, type = "b")
par(pty="s")
k <- 100
timepoint <- exp(1i * 2 * pi * (k:1) / k)
plot(timepoint, pch = 19, type = "b")
par(pty="s")
k <- 100
timepoint <- exp(1i * 2 * pi * (k:1) / k)
plot(timepoint, pch = 19, type = "l")
plot(timepoint[24:1], add = TRUE)
plot(timepoint[100:1], add = TRUE)
par(pty="s")
k <- 100
timepoint <- exp(1i * 2 * pi * (k:1) / k)
plot(timepoint, pch = 19, type = "l")
plot(timepoint[100:1], add = TRUE)
plot(timepoint[100:1], add = TRUE, type = "l")
?plot
